security:
    firewalls:
        secured_area:
              pattern: ^/
              anonymous: ~
              form-login:
                      login_path: login
                      check_path: login_check
              logout:
                      path: /logout
                      target: /login

    access_control:
          - { path: ^/mobile, roles: IS_AUTHENTICATED_ANONYMOUSLY }
          - { path: ^/mobile$, roles: IS_AUTHENTICATED_ANONYMOUSLY }
          - { path: ^/login, roles: IS_AUTHENTICATED_ANONYMOUSLY }
          - { path: ^/dist/create, roles: [ROLE_ADMIN] }
          - { path: ^/owner/create, roles: [ROLE_DISTRIBUTOR] }
          - { path: ^/owner/managers, roles: [ROLE_ACCOUNT_OWNER] }

          - { path: ^/muser/create, roles: [ROLE_ACCOUNT_OWNER, ROLE_MANAGER] }
          - { path: ^/muser/update, roles: [ROLE_ACCOUNT_OWNER, ROLE_MANAGER] }


          - { path: ^/department/create, roles: [ROLE_ACCOUNT_OWNER, ROLE_MANAGER] }
          - { path: ^/department/update, roles: [ROLE_ACCOUNT_OWNER, ROLE_MANAGER] }

          - { path: ^/manager/plants, roles: [ROLE_ACCOUNT_OWNER, ROLE_MANAGER] }
          - { path: ^/manager/departments, roles: [ROLE_ACCOUNT_OWNER, ROLE_MANAGER] }
          - { path: ^/manager/users, roles: [ROLE_ACCOUNT_OWNER, ROLE_MANAGER] }
          - { path: ^/manager/warehouses, roles: [ROLE_ACCOUNT_OWNER, ROLE_MANAGER] }
          - { path: ^/manager/divisions, roles: [ROLE_ACCOUNT_OWNER, ROLE_MANAGER] }
          - { path: ^/manager/currencies, roles: [ROLE_ACCOUNT_OWNER, ROLE_MANAGER] }

          - { path: ^/plant/create, roles: [ROLE_ACCOUNT_OWNER, ROLE_MANAGER] }
          - { path: ^/plant/update*, roles: [ROLE_ACCOUNT_OWNER, ROLE_MANAGER] }


          - { path: ^/warehouse/create, roles: [ROLE_ACCOUNT_OWNER, ROLE_MANAGER] }
          - { path: ^/division/create, roles: [ROLE_ACCOUNT_OWNER, ROLE_MANAGER] }
          - { path: ^/currency/create, roles: [ROLE_ACCOUNT_OWNER, ROLE_MANAGER] }
          - { path: ^/manager/customers, roles: [ROLE_ACCOUNT_OWNER, ROLE_MANAGER] }
          - { path: ^/customers/create, roles: [ROLE_ACCOUNT_OWNER, ROLE_MANAGER] }
          - { path: ^/manager/units, roles: [ROLE_ACCOUNT_OWNER, ROLE_MANAGER] }
          - { path: ^/unit/create, roles: [ROLE_ACCOUNT_OWNER, ROLE_MANAGER] }
          - { path: ^/manager/products, roles: [ROLE_ACCOUNT_OWNER, ROLE_MANAGER] }
          - { path: ^/product/create, roles: [ROLE_ACCOUNT_OWNER, ROLE_MANAGER] }
          - { path: ^/manager/services, roles: [ROLE_ACCOUNT_OWNER, ROLE_MANAGER] }
          - { path: ^/service/create, roles: [ROLE_ACCOUNT_OWNER, ROLE_MANAGER] }
          - { path: ^/lic/update$, roles: [ROLE_ADMIN] }
          - { path: ^/service/update*, roles: [ROLE_ACCOUNT_OWNER, ROLE_MANAGER] }
          - { path: ^/dist/lic, roles: [ROLE_DISTRIBUTOR] }
          - { path: ^/dist/owners, roles: [ROLE_DISTRIBUTOR] }
          - { path: ^/lic, roles: [ROLE_ADMIN] }
          - { path: ^/dist, roles: [ROLE_ADMIN] }
          - { path: ^/, roles: [ROLE_ADMIN, ROLE_ACCOUNT_OWNER, ROLE_MANAGER, ROLE_DISTRIBUTOR] }
          - { path: ^/$, roles: IS_AUTHENTICATED_ANONYMOUSLY }

    # Include the following line to also secure the /admin path itself
     #    - { path: ^/$, roles: ROLE_ADMIN }

    providers:
          main:
              entity:
                    class: Matrix\AdminBundle\Entity\Users
                    property: email
      #  in_memory:
       #         memory:
        #              users:
         #                     ryan: { password: ryanpass, roles: 'ROLE_USER' }
          #                    admin: { password: kitten, roles: 'ROLE_ADMIN' }
    encoders:
        Matrix\AdminBundle\Entity\Users:
                        algorithm: bcrypt
                        cost:      12

        Matrix\ServiceBundle\Entity\Users:
                        algorithm: bcrypt
                        cost:      12
